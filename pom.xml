<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zhlearn</groupId>
    <artifactId>zh-learn-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>ZH Learn - Chinese Learning Tool</name>
    <description>A modern CLI tool for learning Chinese words with AI-powered analysis</description>

    <properties>
        <maven.compiler.source>24</maven.compiler.source>
        <maven.compiler.target>24</maven.compiler.target>
        <maven.compiler.release>24</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Dependency versions -->
        <helidon.version>4.2.7</helidon.version>
        <langchain4j.version>1.3.0</langchain4j.version>
        <junit.version>5.10.1</junit.version>
        <cucumber.version>7.18.0</cucumber.version>
        <mockito.version>5.7.0</mockito.version>
        <assertj.version>3.24.2</assertj.version>

        <!-- Plugin versions -->
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.2.2</maven-failsafe-plugin.version>
        <native-maven-plugin.version>0.9.28</native-maven-plugin.version>
        <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
        <checkstyle.version>10.23.1</checkstyle.version>
        <maven-pmd-plugin.version>3.25.0</maven-pmd-plugin.version>
        <git-build-hook-maven-plugin.version>3.4.1</git-build-hook-maven-plugin.version>
    </properties>

    <modules>
        <module>zh-learn-domain</module>
        <module>zh-learn-pinyin</module>
        <module>zh-learn-infrastructure</module>
        <module>zh-learn-application</module>
        <module>zh-learn-cli</module>
        <module>zh-learn-e2e</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Internal modules -->
            <dependency>
                <groupId>com.zhlearn</groupId>
                <artifactId>zh-learn-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zhlearn</groupId>
                <artifactId>zh-learn-pinyin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zhlearn</groupId>
                <artifactId>zh-learn-infrastructure</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zhlearn</groupId>
                <artifactId>zh-learn-application</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Helidon BOM -->
            <dependency>
                <groupId>io.helidon</groupId>
                <artifactId>helidon-dependencies</artifactId>
                <version>${helidon.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Helidon Service Registry for dependency injection -->
            <dependency>
                <groupId>io.helidon.service</groupId>
                <artifactId>helidon-service-registry</artifactId>
                <version>${helidon.version}</version>
            </dependency>
            <dependency>
                <groupId>io.helidon.service</groupId>
                <artifactId>helidon-service-codegen</artifactId>
                <version>${helidon.version}</version>
            </dependency>
            <dependency>
                <groupId>io.helidon.service</groupId>
                <artifactId>helidon-service-metadata</artifactId>
                <version>${helidon.version}</version>
            </dependency>

            <!-- LangChain4J BOM -->
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-bom</artifactId>
                <version>${langchain4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- LangChain4J Core Dependencies -->
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-core</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-open-ai</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-google-ai-gemini</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>

            <!-- SLF4J Implementation -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>2.0.17</version>
            </dependency>

            <!-- Terminal formatting -->
            <dependency>
                <groupId>org.fusesource.jansi</groupId>
                <artifactId>jansi</artifactId>
                <version>2.4.1</version>
            </dependency>

            <!-- HTML parsing -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>1.18.1</version>
            </dependency>

            <!-- CLI framework -->
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>4.7.7</version>
            </dependency>
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli-codegen</artifactId>
                <version>4.7.7</version>
            </dependency>

            <!-- Testing -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit-platform-engine</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite-api</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite-engine</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>24</source>
                        <target>24</target>
                        <release>24</release>
                        <compilerArgs>
                            <arg>--enable-preview</arg>
                        </compilerArgs>
                        <fork>true</fork>
                        <showWarnings>false</showWarnings>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                            <include>**/RunCucumberTest.java</include>
                        </includes>
                        <properties>
                            <configurationParameters>
                                cucumber.junit-platform.naming-strategy=long
                            </configurationParameters>
                        </properties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*IT.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${native-maven-plugin.version}</version>
                    <configuration>
                        <imageName>zh-learn</imageName>
                        <mainClass>com.zhlearn.cli.ZhLearnApplication</mainClass>
                        <buildArgs>
                            <buildArg>--no-fallback</buildArg>
                            <buildArg>--install-exit-handlers</buildArg>
                            <buildArg>--enable-preview</buildArg>
                            <buildArg>--initialize-at-build-time=org.slf4j</buildArg>
                            <buildArg>--initialize-at-run-time=io.helidon</buildArg>
                        </buildArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless-maven-plugin.version}</version>
                    <configuration>
                        <java>
                            <googleJavaFormat>
                                <version>1.25.2</version>
                                <style>AOSP</style>
                            </googleJavaFormat>
                            <importOrder>
                                <order>java,javax,jakarta,org,com</order>
                            </importOrder>
                            <removeUnusedImports/>
                        </java>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>config/checkstyle.xml</configLocation>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <rulesets>
                            <ruleset>config/pmd-ruleset.xml</ruleset>
                        </rulesets>
                        <printFailingErrors>true</printFailingErrors>
                        <failOnViolation>true</failOnViolation>
                        <includeTests>true</includeTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.rudikershaw.gitbuildhook</groupId>
                    <artifactId>git-build-hook-maven-plugin</artifactId>
                    <version>${git-build-hook-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Spotless: Code formatting -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>spotless-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Checkstyle: Style enforcement -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>checkstyle-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- PMD: Code quality analysis -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pmd-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Git Build Hook: Install pre-commit hook -->
            <plugin>
                <groupId>com.rudikershaw.gitbuildhook</groupId>
                <artifactId>git-build-hook-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-git-hooks</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <gitConfig>
                                <core.hooksPath>.git/hooks</core.hooksPath>
                            </gitConfig>
                            <hooks>
                                <pre-commit>#!/bin/sh
echo "Running linters before commit..."
mvn spotless:check checkstyle:check pmd:check
if [ $? -ne 0 ]; then
    echo "Linter checks failed. Run 'mvn spotless:apply' to fix formatting issues."
    exit 1
fi
                                </pre-commit>
                            </hooks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-commons-csv-for-moditect</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/moditect-libs</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.apache.commons</groupId>
                                            <artifactId>commons-csv</artifactId>
                                            <version>1.10.0</version>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>inject-automatic-module-name-commons-csv</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/moditect-work"/>
                                        <echo file="${project.build.directory}/moditect-work/manifest-commons-csv.mf">Manifest-Version: 1.0&#10;Automatic-Module-Name: org.apache.commons.csv&#10;</echo>
                                        <jar destfile="${project.build.directory}/moditect-libs/commons-csv-1.10.0.jar" update="true" manifest="${project.build.directory}/moditect-work/manifest-commons-csv.mf"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>moditect</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.moditect</groupId>
                        <artifactId>moditect-maven-plugin</artifactId>
                        <version>1.2.1.Final</version>
                        <executions>
                            <execution>
                                <id>add-module-info-3rdparty</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>add-module-info</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/moditect-libs</outputDirectory>
                                    <overwriteExistingFiles>true</overwriteExistingFiles>
                                    <modules>
                                        <module>
                                            <artifact>
                                                <groupId>org.apache.commons</groupId>
                                                <artifactId>commons-csv</artifactId>
                                                <version>1.10.0</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module org.apache.commons.csv { exports org.apache.commons.csv; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>com.knuddels</groupId>
                                                <artifactId>jtokkit</artifactId>
                                                <version>1.1.0</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module jtokkit { exports com.knuddels.jtokkit; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>dev.langchain4j</groupId>
                                                <artifactId>langchain4j-core</artifactId>
                                                <version>${langchain4j.version}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module langchain4j.core { requires transitive org.slf4j; requires transitive com.fasterxml.jackson.core; requires transitive com.fasterxml.jackson.databind; exports dev.langchain4j; exports dev.langchain4j.model; exports dev.langchain4j.model.chat; exports dev.langchain4j.data.message; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>dev.langchain4j</groupId>
                                                <artifactId>langchain4j-http-client</artifactId>
                                                <version>${langchain4j.version}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module langchain4j.http.client { requires transitive org.slf4j; exports dev.langchain4j.http.client; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>dev.langchain4j</groupId>
                                                <artifactId>langchain4j-http-client-jdk</artifactId>
                                                <version>${langchain4j.version}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module langchain4j.http.client.jdk { requires transitive java.net.http; requires transitive langchain4j.http.client; requires transitive org.slf4j; exports dev.langchain4j.http.client.jdk; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>dev.langchain4j</groupId>
                                                <artifactId>langchain4j-open-ai</artifactId>
                                                <version>${langchain4j.version}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module langchain4j.open.ai { requires transitive langchain4j.core; requires transitive langchain4j.http.client; requires transitive langchain4j.http.client.jdk; requires transitive java.net.http; requires transitive com.fasterxml.jackson.core; requires transitive com.fasterxml.jackson.databind; requires transitive org.slf4j; requires transitive jtokkit; exports dev.langchain4j.model.openai; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>dev.langchain4j</groupId>
                                                <artifactId>langchain4j-google-ai-gemini</artifactId>
                                                <version>${langchain4j.version}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module langchain4j.google.ai.gemini { requires transitive langchain4j.core; requires transitive java.net.http; requires transitive com.fasterxml.jackson.core; requires transitive com.fasterxml.jackson.databind; requires transitive org.slf4j; exports dev.langchain4j.model.googleai; }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>org.apache.opennlp</groupId>
                                                <artifactId>opennlp-tools</artifactId>
                                                <version>2.5.4</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module org.apache.opennlp.tools { }
                                            </moduleInfoSource>
                                        </module>
                                    </modules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-3rdparty-for-moditect</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/moditect-libs</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.belerweb</groupId>
                                            <artifactId>pinyin4j</artifactId>
                                            <version>2.5.0</version>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>dev.langchain4j</groupId>
                                            <artifactId>langchain4j-core</artifactId>
                                            <version>${langchain4j.version}</version>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>dev.langchain4j</groupId>
                                            <artifactId>langchain4j-open-ai</artifactId>
                                            <version>${langchain4j.version}</version>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>dev.langchain4j</groupId>
                                            <artifactId>langchain4j-google-ai-gemini</artifactId>
                                            <version>${langchain4j.version}</version>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
